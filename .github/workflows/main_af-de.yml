name: Build and deploy Flask and React app to Azure Web App - af-de

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        working-directory: ./server
        run: |
          python -m pip install --upgrade pip
          pip install -r utils/requirements.txt

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install and build client
        working-directory: ./client
        run: |
          npm ci
          npm run build
          if [ ! -d "dist" ]; then
            echo "Dist directory not created!"
            exit 1
          fi

      - name: Debug - List directories
        run: |
          echo "Root directory:"
          ls -la
          echo "Server directory:"
          ls -la server/
          echo "Client directory:"
          ls -la client/
          echo "Client dist directory:"
          ls -la client/dist/ || echo "Dist directory not found!"

      - name: Zip artifact for deployment
        run: |
          if [ -d "client/dist" ] && [ -d "server" ]; then
            zip -r release.zip server client/dist
          else
            echo "Required directories not found!"
            exit 1
          fi

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: flask-react-app
          path: release.zip

  deploy:
    runs-on: ubuntu-24.04
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: flask-react-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'af-de'
          package: ./release.zip